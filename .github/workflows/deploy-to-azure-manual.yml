# .github/workflows/deploy-to-azure-manual.yml
name: 🚀 Manual Deploy to Azure Web App

on:
  workflow_dispatch:  # Manual trigger
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
      deploy_path:
        description: 'Deploy path on Azure Web App'
        required: true
        default: '/public'
        type: string

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    environment: 
      name: ${{ github.event.inputs.environment }}
      url: ${{ steps.deploy.outputs.webapp-url }}

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for proper Jekyll builds

    - name: 🔧 Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true

    - name: 📦 Install Dependencies
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3

    - name: 🏗️ Build Jekyll Site
      run: |
        bundle exec jekyll build --destination ./_site
      env:
        JEKYLL_ENV: production
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 🧹 Clean Build Output
      run: |
        # Remove unnecessary files for production
        find ./_site -name "*.scss" -delete
        find ./_site -name "*.sass" -delete
        find ./_site -name "*.map" -delete
        
        # Optimize images (optional)
        # sudo apt-get update && sudo apt-get install -y imagemagick
        # find ./_site -name "*.jpg" -exec mogrify -quality 85 {} \;

    - name: 📊 Display Build Info
      run: |
        echo "📁 Build directory size:"
        du -sh ./_site
        echo ""
        echo "📄 Generated files:"
        find ./_site -type f | head -20

    - name: 🔐 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 🚀 Deploy to Azure Web App
      id: deploy
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        resource-group-name: ${{ secrets.AZURE_RESOURCE_GROUP }}
        slot-name: ${{ github.event.inputs.environment == 'staging' && 'staging' || 'production' }}
        package: './_site'
        
    - name: 🔄 Restart Azure Web App
      run: |
        az webapp restart \
          --name ${{ secrets.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --slot ${{ github.event.inputs.environment == 'staging' && 'staging' || 'production' }}

    - name: 🧪 Health Check
      run: |
        # Wait for app to restart
        sleep 30
        
        # Check if site is accessible
        WEBAPP_URL="${{ steps.deploy.outputs.webapp-url }}"
        echo "🔍 Checking health at: $WEBAPP_URL"
        
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$WEBAPP_URL")
        
        if [ "$HTTP_STATUS" -eq 200 ]; then
          echo "✅ Deployment successful! Site is accessible."
        else
          echo "❌ Health check failed. HTTP Status: $HTTP_STATUS"
          exit 1
        fi

    - name: 📝 Deployment Summary
      run: |
        echo "## 🎉 Deployment Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deploy Path**: ${{ github.event.inputs.deploy_path }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Site URL**: ${{ steps.deploy.outputs.webapp-url }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployment Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Build Stats" >> $GITHUB_STEP_SUMMARY
        echo "- **Files Generated**: $(find ./_site -type f | wc -l)" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Size**: $(du -sh ./_site | cut -f1)" >> $GITHUB_STEP_SUMMARY
